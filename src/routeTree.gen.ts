/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PathlessLayoutRouteImport } from './routes/_pathlessLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PathlessLayoutLandingRouteImport } from './routes/_pathlessLayout/landing'
import { Route as PathlessLayoutFlightBookingDashboardRouteImport } from './routes/_pathlessLayout/flight-booking/dashboard'
import { Route as PathlessLayoutAccountingUsersRouteImport } from './routes/_pathlessLayout/accounting/users'

const PathlessLayoutRoute = PathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutLandingRoute = PathlessLayoutLandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => PathlessLayoutRoute,
} as any)
const PathlessLayoutFlightBookingDashboardRoute =
  PathlessLayoutFlightBookingDashboardRouteImport.update({
    id: '/flight-booking/dashboard',
    path: '/flight-booking/dashboard',
    getParentRoute: () => PathlessLayoutRoute,
  } as any)
const PathlessLayoutAccountingUsersRoute =
  PathlessLayoutAccountingUsersRouteImport.update({
    id: '/accounting/users',
    path: '/accounting/users',
    getParentRoute: () => PathlessLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/landing': typeof PathlessLayoutLandingRoute
  '/accounting/users': typeof PathlessLayoutAccountingUsersRoute
  '/flight-booking/dashboard': typeof PathlessLayoutFlightBookingDashboardRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/landing': typeof PathlessLayoutLandingRoute
  '/accounting/users': typeof PathlessLayoutAccountingUsersRoute
  '/flight-booking/dashboard': typeof PathlessLayoutFlightBookingDashboardRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/_pathlessLayout/landing': typeof PathlessLayoutLandingRoute
  '/_pathlessLayout/accounting/users': typeof PathlessLayoutAccountingUsersRoute
  '/_pathlessLayout/flight-booking/dashboard': typeof PathlessLayoutFlightBookingDashboardRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/landing'
    | '/accounting/users'
    | '/flight-booking/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/landing' | '/accounting/users' | '/flight-booking/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_pathlessLayout'
    | '/_pathlessLayout/landing'
    | '/_pathlessLayout/accounting/users'
    | '/_pathlessLayout/flight-booking/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/landing': {
      id: '/_pathlessLayout/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof PathlessLayoutLandingRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
    '/_pathlessLayout/flight-booking/dashboard': {
      id: '/_pathlessLayout/flight-booking/dashboard'
      path: '/flight-booking/dashboard'
      fullPath: '/flight-booking/dashboard'
      preLoaderRoute: typeof PathlessLayoutFlightBookingDashboardRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
    '/_pathlessLayout/accounting/users': {
      id: '/_pathlessLayout/accounting/users'
      path: '/accounting/users'
      fullPath: '/accounting/users'
      preLoaderRoute: typeof PathlessLayoutAccountingUsersRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
  }
}

interface PathlessLayoutRouteChildren {
  PathlessLayoutLandingRoute: typeof PathlessLayoutLandingRoute
  PathlessLayoutAccountingUsersRoute: typeof PathlessLayoutAccountingUsersRoute
  PathlessLayoutFlightBookingDashboardRoute: typeof PathlessLayoutFlightBookingDashboardRoute
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutLandingRoute: PathlessLayoutLandingRoute,
  PathlessLayoutAccountingUsersRoute: PathlessLayoutAccountingUsersRoute,
  PathlessLayoutFlightBookingDashboardRoute:
    PathlessLayoutFlightBookingDashboardRoute,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
